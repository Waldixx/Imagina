== Bienvenidos a Rails
== App Imagina
== @Author Oswaldo Didier Lòpez Garcìa
== oswaldo@codetlan.com, @Waldiixx

La aplicacion Imagina es una pequeña demostración de la integracion entre un formulario basico, Imagenes y Jquery.

Acontinuación se describen los pasos que se realizaron para la creación de la App.

1.- Primero vamos a realizar la creación de nuestro proyecto con las siguientes instrucciones en la terminal,

# rails new <nombre de nuestra app>
Crea la carpeta de la aplicacion y nos crea nuestro entorno de desarrollo.

2.- Ahora vamos a realizar los modelos que se ocuparan para poder construir nuestro sistema, dichos comandos estan construidos
de la siguiente manera.

  <comando rails><nombre del modelo><campos para creacion de BD nombre:tipo><comando para que no genere los styles de rails>

Nos genera los modelos, la vista, los controladores y mapea automaticamente los modelos a la BD generando las tablas.

# rails g scaffold Image name:string picture:string --skip-stylesheets
# rails g scaffold Comment name:string picture:string --skip-stylesheets

Creamos el modelo Image para la visualizacion y carga de imagenes. Tambien creamos el modelo Comment para la insercion
de comentarios y visualizacion de estos.

3.- Una vez que tenemos nuestros modelos creados en la ruta /imagina/db/migrate  Tenemos los archivos que generaran nuestra
BD con los campos de cada uno de los valores que les dimos al generar el scaffold.
Para la creacion de la Base de datos ejecutamos el siguiente comando.

# rake db:migrate
Crea la BD con sus respectivas tablas de acuerdo a los modelos generados.

Hasta este punto ya tenemos creada la mayor parte de nuestra App ya que podemos ver que automaticamente rails nos genera
la funcionalidad de Agregar, Editar y Eliminar.
Con esto podemos ver la facilidad y rapidez con la que se crea un formulario en Ruby & Rails.
Si queremos comprobar esto ponemos en marcha nuestro servidor local en el cual correra la App creada.

# rails server
Pone en marcha nuestro servidor local.

Una vez echo esto nos dirigimos a un navegador y ponemos:

http://localhost:3000/images
Observaremos las funcionalidades que se crearon para nuestro modelo Imagen

http://localhost:3000/comments
Observaremos las funcionalidades que se crearon para nuestro modelo Comment


== Integracion de Bootstrap con Ruby and Rails

Bootstrap:

Gema:

1.- Para poder darle una mejor apariencia en cuanto a estilos a nuestra App vamos a instalar una gema llamada Bootstrap y
esto lo vamos hacer de la siguienta manera.

Ingresamos al archivo que esta en /imagina/Gemfile  al estar dentro del archivo agregamos la siguiente linea

gem 'twitter-bootstrap-rails'

Y para instalarla escribimos lo siguiente en la terminal

# bundle install
Instala las gemas agregadas a nuestra App

Pasamos a la generación de los archivos de estilos que tiene Bootstrap los llamados "stylesheets"

# rails g bootstrap:install
Creacion de stylesheets de bootstrap

Para ver la nueva apariencia que tenemos en nuestras vistas refrescamos el navegador o entramos a las url`s
mencionadas anteriormente.
:D

Es impresionante como tan rapido obtienes resultados y todavia sin escribir una sola linea de codigo.


== Creacion del Index

1.- Vamos a crear nuestra pagina pricipal que sera la que va unir nuestros modelos para formar el funcionamiento
de imagenes y cometarios.
Para poder hacer esto solo generamos el controlador y la vista.

# rails g controller home index
Crea el controlador y la vista llamada index.

2.- Abrimos el archivo que se encuentra en /imagina/config/routes.rb  y agregamos la siguiente linea

root :to => 'home#index', as: 'Imagina'
Con esto le estamos diciendo a nuestro sistema que la raiz sera la vista index y la hacemos nombrar Imagina.

# rake routes
Aplica la nueva configuracion de rutas.

3.- Eliminamos la pagina index que trae por default Ruby & Rails para poder visualizar la que agregamos.

# rm public/index.html

4.- Comprobamos que nuestra pagina de inicio sea el index. Nos dirigimos a nuestro navegador y consultamos la siguiente url

http://localhost:3000
Observamos un mensaje que dice Home#Index esto quiere decir que vamos por buen camino.


== Manejo de las Gems Carrierwave y Rmagick para el manejo de Imagenes.

En esto caso para la parte de imagenes utilizaremos 2 gemas bastante utilizadas en el mundo Ruuby & Rails. Las cuales se nos
hacen muy interesantes debido a que es muy facil utilzarlas y el control de las imagenes que se dan de alta en la aplicacion
es simple ya que genera carpetas de acuerdo al id de la imagen en /imagina/public/uploads

Tambien con Rmagick podemos elegir el tamaño que deben de tomar nuestras imagenes al visualizarlas en la aplicacion.

1.- Agregamos nuestras gemas al archivo Gemfile escribiendo estas simples lineas.

gem 'carrierwave'
gem 'rmagick'

Una vez echo esto vamos a la terminal y procedemos a la instalación de estas. # bundle install

2.- Generamos el archivo para la configuracion de imagenes.

# rails g uploader picture
Archivo que se genera en /imagina/app/uploaders/

3.- Para que funcione adecuadamente la gema rmagick en MAC debemos de correr el siguiente comando.

# curl https://raw.github.com/maddox/magick-installer/master/magick-installer.sh | sh
Este comando puede tardar varios minutos...

4.- Ya que tenemos la configuración completa para la creacion de imagenes les sugerimos observar los siguientes archivos
en ellos se comenta como generar y visualizar imagenes.
- /iamgina/app/views/images/_form.html.erb
- /iamgina/app/views/images/index.html.erb


== Añadimos Jquery para hacer un manejo Ajax dentro de la App.

La incorporación de Jquery dentro de esta aplicacion es para que la visualizacion de esta sea mas elegante y no estar
refrescando cada que se agrega o elimina algun comentario y tambien para que al cambiar la imagen se actualizen los comentarios.

Para que funcione Jquery tendremos que seguir los siguientes pasos.

1.- Se instala la gema como las gemas anteriores.

gem 'jquery-rails'

# bundle install


En el archivo application.js es donde escribiremos nuestro codigo javascript que interectuara con la aplicacion.
Vease el archivo y los comentarios para una mejor explicacion de la funcionalidad de imagenes y comentarios.



*** La App Imagina se encuentra funcionando actualmente en heroku en la siguiente url http://imagina.herokuapp.com/  ***
En caso de no saber de que forma subir a heroku una App tambien les invito a seguirnos en tumblr y ver nuestro post donde
te enseñamos de que forma realizarlo.

El codigo es totalmente publico para ser bajado y modificado.
Estamos al tanto de sus dudas o comentarios y espero les guste nuestro post.

Saludos.











